{"version":3,"sources":["components/Search.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","data.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/ErrorMessage.js","screens/HomeScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/ProductScreen.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderDetailScreen.js","screens/AdminUserListScreen.js","screens/AdminUserEditScreen.js","screens/AdminProductListScreen.js","screens/AdminProductEditScreen.js","screens/AdminOrderListScreen.js","App.js","reducers/cartReducers.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Search","useState","keyword","setKeyword","history","useHistory","onSubmit","e","preventDefault","push","location","pathname","className","type","placeholder","aria-label","onChange","target","value","data-mdb-ripple-color","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_DETAIL_BY_ID_REQUEST","USER_DETAIL_BY_ID_SUCCESS","USER_DETAIL_BY_ID_FAIL","USER_DETAIL_BY_ID_RESET","USER_UPDATE_BY_ID_REQUEST","USER_UPDATE_BY_ID_SUCCESS","USER_UPDATE_BY_ID_FAIL","USER_UPDATE_BY_ID_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_DETAIL_FAIL","ORDER_DETAIL_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_LIST_ADMIN_REQUEST","ORDER_LIST_ADMIN_SUCCESS","ORDER_LIST_ADMIN_FAIL","ORDER_LIST_ADMIN_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserProfile","dispatch","getState","a","userInfo","userLogin","axios","get","headers","Authorization","token","data","payload","response","detail","message","Header","cart","useSelector","state","useDispatch","data-mdb-toggle","data-mdb-target","aria-controls","aria-expanded","href","id","to","Nav","Link","reduce","acc","curr","qty","DropdownButton","variant","title","first_name","username","Dropdown","Item","onClick","localStorage","removeItem","is_staff","Footer","Container","Row","Col","Rating","text","color","style","_id","name","image","Product","product","Card","Img","src","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_RESET","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_BY_ID_REQUEST","PRODUCT_UPDATE_BY_ID_SUCCESS","PRODUCT_UPDATE_BY_ID_FAIL","PRODUCT_UPDATE_BY_ID_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","fetchProducts","fetchProduct","productId","Loader","Spinner","animation","role","height","width","ErrorMessage","children","Alert","HomeScreen","content","productList","products","loading","error","search","useEffect","map","sm","md","lg","CART_ADD_ITEM","CART_REMOVE_ITEM","SAVE_SHIPPING_ADDRESS","SAVE_PAYMENT_METHOD","CART_CLEAR","addItemToCart","brand","countInStock","setItem","JSON","stringify","ProductScreen","match","setRating","comment","setComment","parseInt","params","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","showAlert","setShowAlert","Image","alt","fluid","thumbnail","ListGroup","ListGroupItem","description","Button","disabled","block","found","getItem","parse","find","item","cartQty","window","setTimeout","onAddCartClicked","show","reviews","length","review","createdAt","substring","Form","post","createProductReview","Group","controlId","Label","Control","row","CartScreen","onRemoveClicked","removeItemFromCart","cartItem","Array","keys","x","parseFloat","toFixed","LoginScreen","email","setEmail","password","setPassword","user","redirect","split","margin","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","alert","setAlert","userRegister","ProfileScreen","userProfile","userUpdateProfile","orderList","orders","loadingOrders","getOrdersError","userObj","put","order","date","isDelivered","totalPrice","CheckoutSteps","login","shipping","payment","placeorder","ShippingScreen","address","setAddress","city","setCity","province","setProvince","postcode","setPostcode","shippingDetail","custom","PaymentScreen","checkedItem","setCheckedItem","handleOptionChange","paymentMethod","checked","PlaceOrderScreen","orderCreate","cartInfo","shippingInfo","itemsPrice","shippingPrice","taxPrice","Number","createOrder","orderItems","ispaid","OrderDetailScreen","orderId","orderDetail","orderDetailError","orderDetailLoading","orderPay","orderDeliver","successDelivered","deliverError","getOrderDetail","postalCode","deliveredAt","isPaid","paidAt","orderitems","orderItem","deliverOrder","AdminUserListScreen","showDeleteUserWarning","setDeleteUserWarning","userList","users","userListError","userDelete","deleteUserError","userDeleteHandler","userId","delete","Heading","scope","size","AdminUserEditScreen","staff","setStaff","userDetail","userDetailById","userDetailError","userUpdateById","userUpdateSuccess","userUpdateError","getUserDetailById","updateUserById","Check","label","AdminProductListScreen","showDeleteProductWarning","setDeleteProductWarning","showCreateForm","setShowCreateForm","setBrand","category","setCategory","setDescription","setPrice","setCountInStock","imageFile","setImageFile","productListLoading","productListError","productDelete","deleteProductSuccess","deleteProductLoading","productCreate","createProductSuccess","createProductLoading","createProductError","productDeleteHandler","createProductHandler","formData","FormData","append","createProduct","rows","min","step","data-number-to-fixed","data-number-stepfactor","AdminProductEditScreen","productDetail","productDetailError","productUpdateById","productUpdateSuccess","productUpdateError","updateProductById","File","files","AdminOrderListScreen","orderListAdmin","App","exact","path","component","shippingAddressFromStorage","rootReducer","combineReducers","action","itm","filter","userInfoFromStorage","initialState","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebd3cf3c.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Search = () => {\r\n    const [keyword, setKeyword] = useState('')  \r\n    let history = useHistory()\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}`)\r\n        } else {\r\n            history.push(history.location.pathname)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={searchHandler} className=\"d-flex input-group w-auto m-3\">\r\n                <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Type query\"\r\n                aria-label=\"Search\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n                <button\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"submit\"\r\n                data-mdb-ripple-color=\"dark\"\r\n                >\r\n                Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST'\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\r\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\r\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n//Admin\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST' \r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS' \r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL' \r\nexport const USER_LIST_RESET = 'USER_LIST_RESET' \r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST' \r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS' \r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL' \r\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET' \r\n\r\nexport const USER_DETAIL_BY_ID_REQUEST = 'USER_DETAIL_BY_ID_REQUEST' \r\nexport const USER_DETAIL_BY_ID_SUCCESS = 'USER_DETAIL_BY_ID_SUCCESS' \r\nexport const USER_DETAIL_BY_ID_FAIL = 'USER_DETAIL_BY_ID_FAIL' \r\nexport const USER_DETAIL_BY_ID_RESET = 'USER_DETAIL_BY_ID_RESET' \r\n\r\nexport const USER_UPDATE_BY_ID_REQUEST = 'USER_UPDATE_BY_ID_REQUEST' \r\nexport const USER_UPDATE_BY_ID_SUCCESS = 'USER_UPDATE_BY_ID_SUCCESS' \r\nexport const USER_UPDATE_BY_ID_FAIL = 'USER_UPDATE_BY_ID_FAIL' \r\nexport const USER_UPDATE_BY_ID_RESET = 'USER_UPDATE_BY_ID_RESET' ","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET' \r\n\r\nexport const ORDER_DETAIL_REQUEST = 'ORDER_DETAIL_REQUEST' \r\nexport const ORDER_DETAIL_SUCCESS = 'ORDER_DETAIL_SUCCESS' \r\nexport const ORDER_DETAIL_FAIL = 'ORDER_DETAIL_FAIL' \r\nexport const ORDER_DETAIL_RESET = 'ORDER_DETAIL_RESET' \r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST' \r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS' \r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL' \r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET' \r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST' \r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS' \r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL' \r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET' \r\n\r\nexport const ORDER_LIST_ADMIN_REQUEST = 'ORDER_LIST_ADMIN_REQUEST' \r\nexport const ORDER_LIST_ADMIN_SUCCESS = 'ORDER_LIST_ADMIN_SUCCESS' \r\nexport const ORDER_LIST_ADMIN_FAIL = 'ORDER_LIST_ADMIN_FAIL' \r\nexport const ORDER_LIST_ADMIN_RESET = 'ORDER_LIST_ADMIN_RESET' \r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST' \r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS' \r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL' \r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET' ","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_PROFILE_REQUEST,\r\n    USER_PROFILE_SUCCESS,\r\n    USER_PROFILE_FAIL,\r\n    USER_PROFILE_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_RESET,\r\n\r\n    USER_DETAIL_BY_ID_REQUEST,\r\n    USER_DETAIL_BY_ID_SUCCESS,\r\n    USER_DETAIL_BY_ID_FAIL,\r\n    USER_UPDATE_BY_ID_REQUEST,\r\n    USER_UPDATE_BY_ID_SUCCESS,\r\n    USER_UPDATE_BY_ID_FAIL,\r\n    USER_UPDATE_BY_ID_RESET,\r\n} from '../constants/userConstants'\r\nimport {ORDER_DETAIL_RESET,ORDER_LIST_RESET} from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const userLogin = (email,password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/login',\r\n        { 'username': email, 'password': password },\r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\n//logout action creator\r\nexport const userLogout = () => (dispatch) => {\r\n\r\n    localStorage.removeItem('userInfo')\r\n\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n\r\n    dispatch({\r\n        type: USER_PROFILE_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_DETAIL_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_RESET\r\n    })\r\n}\r\n\r\n\r\nexport const userRegister = (name,email,password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/register',\r\n        { 'username': email, 'email': email, 'password': password,'first_name':name },\r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //Once register successfully, dispatch an action to update userLogin state with register response dataset. \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const getUserProfile = () => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_PROFILE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/users/profile`,        \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const updateUserProfile = (userObj) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.put(`/api/users/profile/update`, \r\n        userObj,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //update userLogin state with updated userInfo as well as localStorage\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\n//Admin\r\nexport const getUserList = () => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:USER_LIST_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/users/`,               \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const deleteUser = (userId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.delete(`/api/users/delete/${userId}/`,            \r\n        {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: USER_DELETE_RESET\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const getUserDetailById = (userId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_DETAIL_BY_ID_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/users/${userId}/`,        \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_DETAIL_BY_ID_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAIL_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const updateUserById = (userObj,userId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:USER_UPDATE_BY_ID_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.put(`/api/users/${userId}/update/`, \r\n        userObj,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_BY_ID_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_UPDATE_BY_ID_RESET\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}","import React from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {Nav, Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport Search from '../components/Search'\r\nimport {userLogout} from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const cart = useSelector(state => state.cart.cart)\r\n    const userInfo = useSelector(state => state.userLogin.userInfo)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   \r\n    const signoutHandler = () => {\r\n        dispatch(userLogout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-mdb-toggle=\"collapse\"\r\n                    data-mdb-target=\"#navbarTogglerDemo03\"\r\n                    aria-controls=\"navbarTogglerDemo03\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                    >\r\n                    <i className=\"fas fa-bars\"></i>\r\n                    </button>\r\n                    <a className=\"navbar-brand mx-3\" href=\"/\">Summer Shop</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <LinkContainer to=\"/\">\r\n                                <Nav.Link className=\"mx-3\">\r\n                                   HOME             \r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link className=\"mx-3\">\r\n                                    <span className=\"cart-icon badge badge-pill bg-danger\">{cart.reduce((acc,curr)=> acc + curr.qty,0)}</span>\r\n                                    <span><i className=\"cart-icon fas fa-shopping-cart\"></i></span>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {userInfo ? \r\n                            <DropdownButton  variant='dark' className=\"mx-3\" id='username' title={userInfo.first_name !== '' ? userInfo.first_name: userInfo.username}>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <Dropdown.Item>Profile</Dropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <Dropdown.Item onClick={signoutHandler}>Sign Out</Dropdown.Item>\r\n                            </DropdownButton>\r\n                            : \r\n                            <LinkContainer className = \"mx-3\" to=\"/login\">\r\n                                <Nav.Link><i className=\"fas fa-user\"> Login</i></Nav.Link>\r\n                            </LinkContainer>\r\n                            }        \r\n                        </li>\r\n                        <li>\r\n                            {userInfo && userInfo.is_staff && \r\n                            <DropdownButton  variant='dark' className=\"mx-3\" id='username' title=\"Admin\">\r\n                                <LinkContainer to=\"/admin/users\">\r\n                                    <Dropdown.Item>Manage Users</Dropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to=\"/admin/products\">\r\n                                    <Dropdown.Item>Manage Products</Dropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/orders\">\r\n                                    <Dropdown.Item>Manage Orders</Dropdown.Item>\r\n                                </LinkContainer>\r\n                            </DropdownButton>                 \r\n                            }   \r\n                        </li>\r\n                    </ul>\r\n                    <Search />            \r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Summer Shop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=1? \"fas fa-star\"\r\n                    :value>=0.5? \"fas fa-star-half-alt\"\r\n                    :\"far fa-star\" \r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=2? \"fas fa-star\"\r\n                    :value>=1.5? \"fas fa-star-half-alt\"\r\n                    :\"far fa-star\" \r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=3? \"fas fa-star\"\r\n                    :value>=2.5? \"fas fa-star-half-alt\"\r\n                    :\"far fa-star\" \r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=4? \"fas fa-star\"\r\n                    :value>=3.5? \"fas fa-star-half-alt\"\r\n                    :\"far fa-star\" \r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value==5? \"fas fa-star\"\r\n                    :value>=4.5? \"fas fa-star-half-alt\"\r\n                    :\"far fa-star\"\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","export const data = [\r\n    {_id: 4, name: \"Bronzer Powder\", image: \"/images/bronzer.jpg\"},\r\n    {_id: 5, name: \"Ambient Lighting Blush\", image: \"/images/blush.jpg\"},\r\n    {_id: 6, name: \"Luxury Eyeshadow Palette\", image: \"/images/eyeshadow.jpg\"},\r\n    {_id: 7, name: \"Double Wear Stay-in-Place Foundation\", image: \"/images/foundation.jpg\"},\r\n    {_id: 8, name: \"Shimmering Skin Perfector® Pressed Highlighter\", image: \"/images/highlighter.jpg\"},\r\n    {_id: 9, name: \"Monsieur Big Volumizing Mascara\", image: \"/images/mascara.jpg\"},\r\n    {_id: 10, name: \"Soft Matte Complete Concealer\", image: \"/images/concealer.jpg\"},\r\n    {_id: 11, name: \"Rouge Pur Couture Satin Lipstick\", image: \"/images/lipstick.jpg\"},\r\n]","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport {data} from '../data.js'\r\n\r\n\r\nconst Product = ({ product }) => {\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\" >\r\n            <Link to={`/product/${product._id}`}>\r\n                {/* get image from backend */}\r\n                {/* <Card.Img src={product.image} /> */}\r\n                {/* get image from frontend */}\r\n                <Card.Img src={data[product._id-4].image} />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title className=\"text-dark\" as=\"div\"><strong>{product.name}</strong></Card.Title>\r\n            </Link>\r\n            <Card.Text className=\"text-dark\" as=\"div\">\r\n                <div className=\"\">\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#C39BD3\"}/>\r\n                </div>\r\n            </Card.Text>\r\n            <Card.Text className=\"text-dark\" as=\"h3\">\r\n                ${product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCTS_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCTS_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCTS_LIST_FAIL'\r\nexport const PRODUCT_LIST_RESET = 'PRODUCTS_LIST_RESET'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\n//Admin\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST' \r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS' \r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL' \r\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET' \r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET' \r\n\r\nexport const PRODUCT_UPDATE_BY_ID_REQUEST = 'PRODUCT_UPDATE_BY_ID_REQUEST' \r\nexport const PRODUCT_UPDATE_BY_ID_SUCCESS = 'PRODUCT_UPDATE_BY_ID_SUCCESS' \r\nexport const PRODUCT_UPDATE_BY_ID_FAIL = 'PRODUCT_UPDATE_BY_ID_FAIL' \r\nexport const PRODUCT_UPDATE_BY_ID_RESET = 'PRODUCT_UPDATE_BY_ID_RESET' \r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_LIKE_REQUEST = 'PRODUCT_LIKE_REQUEST'\r\nexport const PRODUCT_LIKE_SUCCESS = 'PRODUCT_LIKE_SUCCESS'\r\nexport const PRODUCT_LIKE_FAIL = 'PRODUCT_LIKE_FAIL'","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_RESET,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_BY_ID_REQUEST,\r\n    PRODUCT_UPDATE_BY_ID_SUCCESS,\r\n    PRODUCT_UPDATE_BY_ID_FAIL,\r\n    PRODUCT_UPDATE_BY_ID_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const fetchProducts = (keyword='') => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        const response = await axios.get(`/api/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload: response.data\r\n        })\r\n    } \r\n    catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const fetchProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n        const response = await axios.get(`/api/products/${productId}/`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:response.data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Admin\r\nexport const deleteProduct = (productId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.delete(`/api/products/delete/${productId}/`,            \r\n        {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_DELETE_RESET\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const createProduct = (formData) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.post(`/api/products/add`, \r\n        formData,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_CREATE_RESET\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const updateProductById = (formData,productId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_BY_ID_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.put(`/api/products/${productId}/update/`, \r\n        formData,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_BY_ID_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_BY_ID_RESET\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.post(`/api/products/${productId}/review/`, \r\n        review,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_RESET,\r\n        })        \r\n        dispatch({\r\n            type: PRODUCT_LIST_RESET\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport {Col, Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Col className=\"loader text-center\">\r\n            <Spinner animation=\"border\" role=\"status\" style={{height:\"100px\",width:\"100px\"}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </Col> \r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {Col, Alert} from 'react-bootstrap'\r\n\r\nconst ErrorMessage = ({children, variant}) => (\r\n    <Col>\r\n        <Alert variant={variant}>{children}</Alert>\r\n    </Col>\r\n)\r\n\r\nexport default ErrorMessage","import React, {useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product' \r\nimport {fetchProducts} from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst HomeScreen = ({history}) => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {products,loading,error} = productList\r\n\r\n    //returns path params after ? (includes ?)\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchProducts(keyword))       \r\n    }, [dispatch,keyword])\r\n\r\n    let content\r\n    if (loading) {\r\n        content = <Loader />\r\n    } else if (error) {\r\n        content = <ErrorMessage variant={'danger'}>{error}</ErrorMessage>        \r\n    } else if (products) {\r\n        content = products.map(product => (\r\n            <Col key={product._id} sm={9} md={6} lg={3}>\r\n                <Product product={product} />\r\n            </Col>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-dark\">Latest Products</h1>\r\n            <Row>\r\n                {content}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const SAVE_SHIPPING_ADDRESS = 'SAVE_SHIPPING_ADDRESS'\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR = 'CART_CLEAR'","import axios from 'axios'\r\n\r\nimport {\r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n\r\n    SAVE_SHIPPING_ADDRESS,\r\n    SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addItemToCart = (productId,qty) => async(dispatch,getState) => {\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}/`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            _id: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            image : data.image,\r\n            brand: data.brand,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        },        \r\n    })\r\n    //after dispatch the action, the cart state updated. We store the update state to localStorage \r\n    localStorage.setItem('cart',JSON.stringify(getState().cart.cart))\r\n} \r\n\r\n\r\nexport const removeItemFromCart = (id) => (dispatch,getState) => {\r\n\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload: {\r\n            _id:id\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cart',JSON.stringify(getState().cart.cart))\r\n}\r\n\r\nexport const saveShippingAddress = (shippingDetail) => (dispatch,getState) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS,\r\n        payload: shippingDetail,\r\n    })\r\n\r\n    localStorage.setItem('shippingDetail',JSON.stringify(shippingDetail))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (paymentMethod) => (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod))\r\n}\r\n\r\n","import React, {useState,useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row,Col,Image,ListGroup,Button,Card, ListGroupItem, Alert,Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport {fetchProduct,createProductReview} from '../actions/productActions'\r\nimport {addItemToCart} from '../actions/cartActions'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {data} from '../data.js'\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch=useDispatch()\r\n    const productId = parseInt(match.params.id)\r\n    const login = useSelector(state => state.userLogin)\r\n    const {userInfo} = login\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {product,loading,error} = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!product || product._id !== productId || successProductReview) {\r\n            dispatch(fetchProduct(productId))\r\n        } \r\n    }, [productId,dispatch,product,successProductReview])\r\n\r\n    const onAddCartClicked = () => {\r\n        const cartItems = localStorage.getItem('cart')? JSON.parse(localStorage.getItem('cart')) : []\r\n        const found = cartItems.find(item => item._id === productId)\r\n        const cartQty = found? found.qty : 0\r\n\r\n        setShowAlert(true)\r\n        window.setTimeout(()=>{\r\n            setShowAlert(false)\r\n        },1500)\r\n\r\n        dispatch(addItemToCart(productId,cartQty+1))\r\n    }\r\n\r\n    const submitReviewHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            productId, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n        setRating(0)\r\n        setComment('')\r\n    }\r\n    \r\n    let content\r\n    if (loading) {\r\n        content = <Loader />\r\n    } else if (error) {\r\n        content = <ErrorMessage variant={'danger'}>{error}</ErrorMessage>  \r\n    } else if (product) {\r\n        content = <div>\r\n        <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link> \r\n        <Row>\r\n            <Col sm={8} md={4}>\r\n                <Image src={product.image} alt={product.name} fluid thumbnail />\r\n            </Col>\r\n            <Col md={4}>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroupItem>\r\n                        <h5><strong>{product.brand}</strong></h5>\r\n                        <h5>{product.name}</h5>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Row>\r\n                            <Col><Rating value={product.rating} text={`${product.numReviews} reviews`} color=\"#C39BD3\" /></Col>\r\n                        </Row>\r\n                        \r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        Price: <strong>${product.price}</strong>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        Description: {product.description} \r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>Price:</Col>\r\n                                <Col>${product.price}</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>Status:</Col>\r\n                                <Col>{product.countInStock >0?\r\n                                    \"In Stock\" : \"Out of Stock\"}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n\r\n                        {product.countInStock?            \r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button className=\"my-2 btn\" variant=\"dark\" type=\"button\" disabled={product.countInStock===0} block onClick={()=> onAddCartClicked()}>\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col sm={5} md={5}>Qty:</Col>\r\n                                <Col sm={7} md={7}>\r\n                                <Button size=\"sm\" className=\"mx-3\" variant=\"light\" onClick={() => {qty>1?setQty(qty-1):setQty(qty)}}><i className=\"fas fa-minus\"></i></Button>\r\n                                {qty}\r\n                                <Button size=\"sm\" className=\"mx-3\" variant=\"light\" onClick={() => {qty===product.countInStock?setQty(qty):setQty(qty+1)}}><i className=\"fas fa-plus\"></i></Button>\r\n                                </Col>\r\n                            </Row> */}\r\n                        </ListGroupItem>\r\n                        :\"\"\r\n                        }\r\n{/* \r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button className=\"btn\" variant=\"primary\" type=\"button\" disabled={product.countInStock===0} block onClick={()=> onAddCartClicked()}>\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem> */}\r\n                    </ListGroup>\r\n                </Card>\r\n                <Alert variant='success' show={showAlert}>Item added to cart!</Alert>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-5\">\r\n            <Col md={6}>\r\n                <h5>Reviews</h5>\r\n                {product.reviews.length === 0 && <ErrorMessage variant={'info'}>No Reviews</ErrorMessage>}\r\n\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map(review => (\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} color=\"#C39BD3\" />\r\n                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n\r\n                    <ListGroup.Item>\r\n                        <h5>Write a review</h5>\r\n                        {loadingProductReview && <Loader />}\r\n                        {successProductReview && <ErrorMessage variant={'success'}>Review submitted successfully</ErrorMessage>}\r\n                        {errorProductReview && <ErrorMessage variant={'danger'}>{errorProductReview}</ErrorMessage>}\r\n\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitReviewHandler}>\r\n                                <Form.Group className=\"my-2\" controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={rating}\r\n                                        onChange={(e) => setRating(e.target.value)}\r\n                                    >\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"my-2\" controlId='comment'>\r\n                                    <Form.Label>Review</Form.Label>\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        row='4'\r\n                                        value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='dark'\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        )\r\n                        : <ErrorMessage variant={'info'}>Please <Link to='/login'>login</Link> to write a review</ErrorMessage>\r\n                        }    \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n        </Row>\r\n        </div>\r\n    }\r\n   \r\n    return ( \r\n        <div>{content}</div>\r\n    )    \r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row,Col,Image,ListGroup,Button,Card, Form,ListGroupItem } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {addItemToCart, removeItemFromCart} from '../actions/cartActions'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst CartScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart.cart)\r\n    const login = useSelector(state => state.userLogin)\r\n    const {userInfo} = login\r\n    \r\n    const dispatch=useDispatch()\r\n\r\n    const onRemoveClicked = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        if (userInfo===null) {\r\n            history.push('/login')\r\n        } else {\r\n            history.push('/shipping')\r\n        }\r\n    }\r\n\r\n    const content = cart.length !== 0 \r\n                    ? <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant=\"flush\">\r\n                                {cart.map(cartItem => (\r\n                                    <ListGroupItem key={cartItem._id}>\r\n                                        <Row className=\"mt-3\">\r\n                                            <Col sm={5} md={4} lg={2}>\r\n                                                <LinkContainer to={`/Product/${cartItem._id}`}>\r\n                                                    {/* Image get from frontend */}\r\n                                                    <Image src={cartItem.image} alt={cartItem.name} fluid />\r\n                                                </LinkContainer> \r\n                                            </Col>\r\n                                            <Col sm={3} md={4} lg={3}><Row className=\"cartItem-brand\">{cartItem.brand}</Row><Row>{cartItem.name}</Row></Col>\r\n                                            <Col sm={3} md={4} lg={2} className=\"cartItem-brand\"><strong>${cartItem.price}</strong></Col>\r\n                                            <Col sm={6} md={6} lg={4}>\r\n                                                <Row className=\"mx-5\">\r\n                                                <Form.Control\r\n                                                className=\"mb-2\"\r\n                                                    as=\"select\"\r\n                                                    value={cartItem.qty}\r\n                                                    onChange={e => dispatch(addItemToCart(cartItem._id,parseInt(e.target.value)))}\r\n                                                >\r\n                                                    \r\n                                                {                                        \r\n                                                    [...Array(cartItem.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }              \r\n                                                </Form.Control>    \r\n                                                </Row>\r\n\r\n                                                <Row className=\"mt-3\">\r\n                                                    <Col sm={4} md={6}><button type=\"button\" className=\"btn btn-light mb-2\" data-mdb-ripple-color=\"dark\">LIKE</button></Col>\r\n                                                    <Col className=\"verticalLine\" sm={4} md={6}><button type=\"button\" className=\"btn btn-light mb-2\" data-mdb-ripple-color=\"dark\" onClick={() => {onRemoveClicked(cartItem._id)}}>REMOVE</button></Col>\r\n                                                </Row>                     \r\n                                            </Col> \r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n\r\n                                ))}\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card className=\"text-dark\">\r\n                                <ListGroup>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>Merchandise Subtotal:</Col>\r\n                                            <Col className=\"placeorder-name\">${cart.reduce((acc,curr)=> acc + curr.qty*parseFloat(curr.price),0).toFixed(2)}</Col>\r\n                                        </Row> \r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>Shipping & Handling:</Col>\r\n                                            <Col className=\"placeorder-name\">TBD</Col>\r\n                                        </Row> \r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>GST/HST</Col>\r\n                                            <Col className=\"placeorder-name\">TBD</Col>\r\n                                        </Row> \r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col><strong>Estimate Total:</strong></Col>\r\n                                            <Col className=\"placeorder-name\"><h5>${cart.reduce((acc,curr)=> acc + curr.qty*parseFloat(curr.price),0).toFixed(2)}</h5></Col>\r\n                                        </Row> \r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn-block my-2\"\r\n                                            disabled={cart.length === 0 ? true : false}\r\n                                            onClick={onClickHandler}>\r\n                                            Proceed to checkout\r\n                                        </Button>                            \r\n                                    </ListGroupItem>        \r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    : <ErrorMessage variant={\"info\"}>No item in cart</ErrorMessage>\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"text-dark mb-4\">SHOPPING CART</h1>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form, Container,Row, Col } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {userLogin} from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\n//All route props (match, location and history) are available to LoginScreen\r\nconst LoginScreen = ({location,history}) => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const [email,setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { error, loading,userInfo } = user\r\n\r\n    const redirect = location.search? location.search.split('=')[1] :'/'\r\n\r\n    useEffect(() => {\r\n        userInfo && history.push(redirect)\r\n    }, [history,redirect,userInfo])\r\n\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userLogin(email,password))\r\n    }\r\n\r\n\r\n    return (    \r\n        <div style={{width: \"60%\", margin:\"auto\"}}>\r\n            <h1 className=\"mb-4\">Sign In</h1>\r\n            {loading && <Loader />}     \r\n            {error && <ErrorMessage variant={'danger'}>{error}</ErrorMessage>}\r\n\r\n            <Form onSubmit={onSubmitHandler}>\r\n            <Form.Group className=\"my-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"form-label\">Email</Form.Label>\r\n                <Form.Control value={email} name='email' onChange={(e) => setEmail(e.target.value)} type=\"text\" placeholder=\"Enter email\" required/>\r\n            </Form.Group>\r\n            <Form.Group className=\"my-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" required/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form>      \r\n\r\n            <Row className=\"py-3\">\r\n                <Col >New User?\r\n                <Link className=\"mx-2\"\r\n                    to={redirect? `/register?redirect=${redirect}` : '/register'}\r\n                >\r\n                    Register\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form, Container,Row, Col } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {userRegister} from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n   \r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [alert, setAlert] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.userRegister)\r\n    const { error, loading,userInfo } = user\r\n\r\n    const redirect = location.search? location.search.split('=')[1] :'/'\r\n\r\n    useEffect(() => {\r\n        userInfo && history.push(redirect)\r\n    }, [history,redirect,userInfo])\r\n\r\n    \r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setAlert('Passwords not match')\r\n        } else {\r\n            dispatch(userRegister(name,email,password))\r\n        }\r\n    }\r\n\r\n\r\n    return (    \r\n        <div style={{width: \"60%\", margin:\"auto\"}}>\r\n            <h1  className=\"mb-4\">Sign up with your email address</h1>\r\n            {alert && <ErrorMessage variant={'warning'}>{alert}</ErrorMessage>}\r\n            {loading && <Loader />}     \r\n            {error && <ErrorMessage variant={'danger'}>{error}</ErrorMessage>}\r\n\r\n            <Form onSubmit={onSubmitHandler}>\r\n\r\n            <Form.Group className=\"my-3\" controlId=\"email\">\r\n                <Form.Label>Email(*)</Form.Label>\r\n                <Form.Control value={email} name='email' onChange={(e) => setEmail(e.target.value)} type=\"text\" placeholder=\"Enter email\" required/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-3\" controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control value={name} name='name' onChange={(e) => setName(e.target.value)} type=\"text\" placeholder=\"Enter name\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-3\" controlId=\"password\">\r\n                <Form.Label>Create a Password</Form.Label>\r\n                <Form.Control value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" required/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-3\" controlId=\"passwordConfirm\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\" required/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            </Form>      \r\n\r\n            <Row className=\"py-3\">\r\n                <Col >Already have an account?\r\n                <Link className=\"mx-2\"\r\n                    to={redirect? `/login?redirect=${redirect}` : '/login'}\r\n                >\r\n                    Login\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form, Row, Col,Container, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {getUserProfile, updateUserProfile} from '../actions/userActions'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\nimport { getOrderList } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [alert, setAlert] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userProfile = useSelector(state => state.userProfile)\r\n    const { user,loading, error } = userProfile\r\n\r\n    const updateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = updateProfile\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { orders, loading:loadingOrders, error: getOrdersError } = orderList\r\n\r\n    useEffect(() => {\r\n        //if user haven't logged in, direct user to login page\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || user.id !== userInfo.id) {\r\n                dispatch(getUserProfile())                \r\n            } else if (!orders) {\r\n                dispatch(getOrderList())\r\n            } else if (success) {\r\n                dispatch({\r\n                    type: USER_UPDATE_PROFILE_RESET\r\n                })\r\n\r\n                dispatch(getUserProfile())\r\n            } else {\r\n                setName(user.first_name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch,history,userInfo,user,success,orders])\r\n\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setAlert('Password not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                name: name,\r\n                username: email,\r\n                email: email,\r\n                password: password,\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n        <Row>\r\n            <Col className=\"mx-5\" sm={10} md={4}>\r\n                <h4>Account Information</h4>\r\n\r\n                {alert && <ErrorMessage variant={'warning'}>{alert}</ErrorMessage>}\r\n                {loading && <Loader />}     \r\n                {error && <ErrorMessage variant={'danger'}>{error}</ErrorMessage>}\r\n\r\n                <Form onSubmit={onSubmitHandler}>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"email\">\r\n                    <Form.Label>email</Form.Label>\r\n                    <Form.Control value={email} name='email' onChange={(e) => setEmail(e.target.value)} type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"name\">\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control value={name} name='name' onChange={(e) => setName(e.target.value)} type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"password\">\r\n                    <Form.Label>Create a password</Form.Label>\r\n                    <Form.Control value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"passwordConfirm\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\"/>\r\n                </Form.Group>\r\n\r\n                <Button className=\"my-2\" variant=\"primary\" type=\"submit\">\r\n                    Update\r\n                </Button>\r\n                </Form>      \r\n\r\n            </Col>\r\n            <Col sm={10} md={6}>\r\n                <h4>Order History</h4>\r\n                {loadingOrders && <Loader />}\r\n                {getOrdersError && <ErrorMessage variant={'danger'}>{getOrdersError}</ErrorMessage>}\r\n                {orders && (\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col className=\"placeorder-name\">Order Date</Col>\r\n                                <Col className=\"placeorder-name\">Order Number</Col>\r\n                                <Col className=\"placeorder-name\">Status</Col>\r\n                                <Col className=\"placeorder-name\">Total Amount</Col>\r\n                                <Col className=\"placeorder-name\">Order Detail</Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        {orders.map(order => (\r\n                            <ListGroupItem key={order._id}>\r\n                                <Row>\r\n                                    <Col>{order.date}</Col>\r\n                                    <Col>{order._id}</Col>\r\n                                    <Col>{order.isDelivered ? \"Shipped\" : \"Preparing for shipping\"}</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                    <Col><Link to={`/order/${order._id}`}>View Details</Link> </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n                        ))}    \r\n                    </ListGroup>\r\n                )}\r\n\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAIL_REQUEST,\r\n    ORDER_DETAIL_SUCCESS,\r\n    ORDER_DETAIL_FAIL,\r\n    \r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_RESET,\r\n    ORDER_LIST_ADMIN_REQUEST,\r\n    ORDER_LIST_ADMIN_SUCCESS,\r\n    ORDER_LIST_ADMIN_FAIL,\r\n    ORDER_LIST_ADMIN_RESET ,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nimport {CART_CLEAR} from '../constants/cartConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.post(`/api/orders/add`, \r\n        order,       \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: ORDER_LIST_RESET\r\n        })\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_RESET\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR,\r\n        })\r\n\r\n        localStorage.removeItem('cart')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const getOrderDetail = (orderId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:ORDER_DETAIL_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/orders/${orderId}/`,               \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const payOrder = (orderId, paypalResponseName) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay/`,\r\n        paypalResponseName,               \r\n        {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: ORDER_PAY_RESET,\r\n        })\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_RESET\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const getOrderList = () => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/orders/list`,               \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\n//Admin\r\nexport const getOrderListAdmin = () => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_ADMIN_REQUEST\r\n        })\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.get(`/api/orders/admin/list`,               \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type:ORDER_DELIVER_REQUEST\r\n        })\r\n        const deliver = true\r\n\r\n        const {userInfo} = getState().userLogin\r\n        const {data} = await axios.put(`/api/orders/${orderId}/deliver/`,      \r\n        deliver,     \r\n        {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        },\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: ORDER_DELIVER_RESET,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    } \r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({login, shipping, payment, placeorder}) => {\r\n    return (\r\n        <Nav className=\"flex-column mr-5\">\r\n            {login ? (\r\n                <LinkContainer to=\"/login\">\r\n                    <Nav.Link>Login</Nav.Link>  \r\n                </LinkContainer>\r\n            ) : (\r\n                <LinkContainer to=\"/login\">\r\n                    <Nav.Link disabled>Login</Nav.Link>  \r\n                </LinkContainer>\r\n            )}\r\n\r\n            {shipping ? (\r\n                <LinkContainer to=\"/shipping\">\r\n                    <Nav.Link>Shipping</Nav.Link>  \r\n                </LinkContainer>\r\n            ) : (\r\n                <LinkContainer to=\"/shipping\">\r\n                    <Nav.Link disabled>Shipping</Nav.Link>  \r\n                </LinkContainer>\r\n            )}\r\n\r\n            {payment ? (\r\n                <LinkContainer to=\"/payment\">\r\n                    <Nav.Link>Payment</Nav.Link>  \r\n                </LinkContainer>\r\n            ) : (\r\n                <LinkContainer to=\"/payment\">\r\n                    <Nav.Link disabled>Payment</Nav.Link>  \r\n                </LinkContainer>\r\n            )}\r\n\r\n            {placeorder ? (\r\n                <LinkContainer to=\"/placeorder\">\r\n                    <Nav.Link>Place Order</Nav.Link>  \r\n                </LinkContainer>\r\n            ) : (\r\n                <LinkContainer to=\"/placeorder\">\r\n                    <Nav.Link disabled>Place Order</Nav.Link>  \r\n                </LinkContainer>\r\n            )}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\n    const cart = useSelector(state => state.cart) \r\n    const {shipping} = cart \r\n\r\n    const login = useSelector(state => state.userLogin)\r\n    const {userInfo} = login\r\n\r\n    const [address,setAddress] = useState(shipping.address)\r\n    const [city,setCity] = useState(shipping.city)\r\n    const [province,setProvince] = useState(shipping.province)\r\n    const [postcode, setPostcode] = useState(shipping.postcode)\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    if (userInfo===null) {\r\n        history.push('/login')\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            province,\r\n            postcode,\r\n        }))\r\n\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <Row  className=\"justify-content-md-center\">\r\n                <Col md={2}><CheckoutSteps login shipping/></Col>\r\n                <Col md={7}>\r\n                    <h4>Shipping</h4>\r\n\r\n                    <Form onSubmit={onSubmitHandler}>\r\n                    <Form.Group className=\"my-3\">\r\n                        <Form.Label>street address</Form.Label>\r\n                        <Form.Control value={address} name='address' onChange={(e) => setAddress(e.target.value)} type=\"text\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"my-3\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control value={city} name='city' onChange={(e) => setCity(e.target.value)} type=\"text\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"my-3\">\r\n                        <Form.Label>province</Form.Label>\r\n                        <br/>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            onChange = {(e) => setProvince(e.target.value)}\r\n                            className=\"my-1 mr-sm-2\"\r\n                            id=\"inlineFormCustomSelectProvince\"\r\n                            custom\r\n                            required\r\n                            value={province}\r\n                        >\r\n                            <option value=''>Choose...</option>\r\n                            <option value=\"Alberta\">Alberta</option>\r\n                            <option value=\"British Columbia\">British Columbia</option>\r\n                            <option value=\"Manitoba\">Manitoba</option>\r\n                            <option value=\"New Brunswick\">New Brunswick</option>\r\n                            <option value=\"Newfoundland and Labrador\">Newfoundland and Labrador</option>\r\n                            <option value=\"Northwest Territories\">Northwest Territories</option>\r\n                            <option value=\"Nova Scotia\">Nova Scotia</option>\r\n                            <option value=\"Nunavut\">Nunavut</option>\r\n                            <option value=\"Ontario\">Ontario</option>\r\n                            <option value=\"Prince Edward Island\">Prince Edward Island</option>\r\n                            <option value=\"Quebec\">Quebec</option>\r\n                            <option value=\"Saskatchewan\">Saskatchewan</option>\r\n                            <option value=\"Yukon\">Yukon</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"my-3\">\r\n                        <Form.Label>postalcode</Form.Label>\r\n                        <Form.Control value={postcode} onChange={(e) => setPostcode(e.target.value)} type=\"text\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"my-3\" variant=\"primary\" type=\"submit\">\r\n                        save and next\r\n                    </Button>\r\n                    </Form>      \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form, Row, Col, Container, Alert } from 'react-bootstrap'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const [checkedItem, setCheckedItem] = useState('')\r\n    const cartInfo = useSelector(state => state.cart)\r\n    const {shipping} = cartInfo \r\n\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    if (!shipping.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const  handleOptionChange = (e) => {\r\n        setCheckedItem(e.target.value)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (checkedItem) {\r\n            dispatch(savePaymentMethod(checkedItem))\r\n            history.push('/placeorder')\r\n        } else {\r\n            setShowAlert(true)\r\n            window.setTimeout(()=>{\r\n                setShowAlert(false)\r\n            },2000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md={2}><CheckoutSteps login shipping payment/></Col>\r\n                <Col md={7}>\r\n                    <h4 className=\"mb-4\">Payment Method</h4>\r\n\r\n                    {/* wrap label outside of input so that the whole label is clickable */}\r\n                    <Form onSubmit={onSubmitHandler}>\r\n                        <div className=\"radio\">\r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"mx-2\" type=\"radio\" value=\"PayPal\" \r\n                                    checked={checkedItem === 'PayPal'} \r\n                                    onChange={handleOptionChange}\r\n                                />\r\n                                    PayPal    \r\n                                <i className=\"mx-2 text-info fab fa-cc-paypal\"></i>\r\n                            </label>\r\n                        </div>\r\n                        {/* <div className=\"radio\">\r\n\r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"mr-2\" type=\"radio\" value=\"card\" \r\n                                    checked={checkedItem === 'card'} \r\n                                    onChange={handleOptionChange} \r\n                                />\r\n                                Credit Card/ Debit Card\r\n                                <i className=\"ml-2 text-primary fab fa-cc-visa\"></i> \r\n                                <i className=\"ml-2 text-danger fab fa-cc-mastercard\"></i> \r\n                                <i className=\"ml-2 text-info fab fa-cc-amex\"></i>\r\n                            </label>\r\n                        </div> */}\r\n                        <div className=\"radio\">\r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"mx-2\" type=\"radio\" value=\"bitcoin\" \r\n                                    checked={checkedItem === 'bitcoin'} \r\n                                    onChange={handleOptionChange}\r\n                                    disabled\r\n                                />\r\n                                    Bitcoin    \r\n                                <i className=\"mx-2 text-warning fab fa-bitcoin\"></i>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\r\n                            save and next\r\n                        </Button>\r\n                    </Form> \r\n                    <Alert variant='warning' show={showAlert}>Please select a payment method.</Alert> \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Row,Col,Image,ListGroup,Button,Card, ListGroupItem } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {createOrder} from '../actions/orderActions'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, loading, error, success } = orderCreate\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cartInfo = useSelector(state => state.cart)\r\n    const shippingInfo = cartInfo.shipping\r\n    const {paymentMethod,cart} = cartInfo\r\n\r\n    const login = useSelector(state => state.userLogin)\r\n    const {userInfo} = login\r\n    \r\n    //toFixed() returns a string. \r\n    //update state \r\n    cartInfo.itemsPrice = cart.reduce((acc,curr)=> acc + curr.qty*parseFloat(curr.price),0).toFixed(2)\r\n    cartInfo.shippingPrice = (cartInfo.itemsPrice >= 100 ? 0 : 10).toFixed(2)\r\n    cartInfo.taxPrice = Number(cartInfo.itemsPrice * 0.13).toFixed(2)\r\n\r\n    cartInfo.totalPrice = (Number(cartInfo.itemsPrice) + Number(cartInfo.shippingPrice) + Number(cartInfo.taxPrice)).toFixed(2)\r\n\r\n    if (!paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    if (userInfo===null) {\r\n        history.push('/login')\r\n    }\r\n\r\n    //PayPal button disabled for live demo\r\n    // const addPayPalScript = () => {\r\n    //     const script = document.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.id = 'paypalButtons'\r\n    //     script.src =  \"https://www.paypal.com/sdk/js?client-id=test\"\r\n    //     script.async = true\r\n    //     document.body.appendChild(script)\r\n    //     script.onload = () => {\r\n    //         //the local state SdkReady is like a toggle of showing the third party PayPal button. \r\n    //         setSdkReady(true) \r\n    //     }        \r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     const paypalScript = document.getElementById('paypalButtons')\r\n    //     if (!paypalScript) {\r\n    //         addPayPalScript()\r\n    //     } else if (success) {\r\n    //         history.push(`/order/${order._id}`)\r\n    //         dispatch({ type: ORDER_CREATE_RESET })\r\n    //     } else {\r\n    //         setSdkReady(true)\r\n    //     } \r\n    // }, [success, history,order])\r\n\r\n    //place order function for live demo\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history,order])\r\n\r\n    const createOrderWithoutPayHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart,\r\n            shipping: shippingInfo,\r\n            paymentMethod: paymentMethod,\r\n            itemsPrice: cartInfo.itemsPrice,\r\n            taxPrice: cartInfo.taxPrice,\r\n            shippingPrice: cartInfo.shippingPrice,\r\n            totalPrice: cartInfo.totalPrice,\r\n            ispaid: false,\r\n        }))\r\n    }\r\n\r\n\r\n    // const createOrderPaidHandler = (paypalResponseName) => {\r\n    //     dispatch(createOrder({\r\n    //         orderItems: cart,\r\n    //         shipping: shippingInfo,\r\n    //         paymentMethod: paymentMethod,\r\n    //         itemsPrice: cartInfo.itemsPrice,\r\n    //         taxPrice: cartInfo.taxPrice,\r\n    //         shippingPrice: cartInfo.shippingPrice,\r\n    //         totalPrice: cartInfo.totalPrice,\r\n    //         ispaid: 'now', \r\n    //     }))\r\n    // }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <Row>\r\n                <Col md={2}><CheckoutSteps login shipping payment placeorder/></Col>\r\n                <Col className=\"mb-4\" md={6} lg={6}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroupItem>\r\n                            <h2 className=\"mb-2\"><strong>Shipping Address</strong></h2>\r\n                            <h5>{`Shipping: ${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.province} ${shippingInfo.postcode}`}</h5>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <h2><strong>Payment Method</strong></h2>\r\n                            <h5>Method: {paymentMethod}</h5>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <h2 className=\"mb-2\"><strong>Order Detail</strong></h2>\r\n                            <ListGroup variant=\"flush\">\r\n                                    {cart.map(cartItem => (\r\n                                        <ListGroupItem key={cartItem._id}>\r\n                                            <Row>\r\n                                                <Col sm={4} md={4}>\r\n                                                    <LinkContainer to={`/Product/${cartItem._id}`}>\r\n                                                        {/* Image get from frontend */}\r\n                                                        <Image src={cartItem.image} alt={cartItem.name} fluid />\r\n                                                    </LinkContainer> \r\n                                                </Col>\r\n                                                <Col className=\"placeorder-name\" md={4}>{cartItem.name}</Col>\r\n                                                <Col md={4}>{cartItem.qty} X ${cartItem.price} = ${(parseFloat(cartItem.price)*cartItem.qty).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                    ))}\r\n                            </ListGroup>\r\n                        </ListGroupItem>\r\n                    </ListGroup>                    \r\n                </Col>\r\n\r\n                <Col className=\"mx-auto\" md={4} lg={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <h2 className=\"m-auto\"><strong>Order Summary</strong></h2>          \r\n                                </Row>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cartInfo.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n        \r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cartInfo.shippingPrice}</Col>\r\n                                </Row> \r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cartInfo.taxPrice}</Col>\r\n                                </Row> \r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col className=\"placeorder-name\">${cartInfo.totalPrice}</Col>\r\n                                </Row> \r\n                            </ListGroupItem>\r\n                            \r\n                            {/* {sdkReady ? \r\n                            <ListGroupItem> \r\n                                <PayPalButton                                    \r\n                                    amount={cartInfo.totalPrice}\r\n                                    onSuccess={(details) => createOrderPaidHandler(details.payer.name.given_name)}\r\n                                />\r\n                            </ListGroupItem>\r\n                           \r\n                            : <Loader /> \r\n                            } */}\r\n                            \r\n                            <ListGroupItem>\r\n                                <ErrorMessage variant='warning'>PayPal buttons are disabled for live demo.</ErrorMessage>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button className=\"btn my-2\" variant=\"primary\" type=\"button\" block onClick={createOrderWithoutPayHandler}>\r\n                                            order now and pay later\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n                        </ListGroup>                        \r\n                    </Card>\r\n                    {loading && <Loader />}\r\n                    {error && <ErrorMessage variant={'danger'}>{error}</ErrorMessage>}        \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useEffect,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Row,Col,Image,ListGroup,Card, ListGroupItem,Button } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {getOrderDetail, payOrder, deliverOrder} from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport {ORDER_LIST_ADMIN_RESET, ORDER_DETAIL_RESET, ORDER_LIST_RESET} from '../constants/orderConstants'\r\n\r\nconst OrderDetailScreen = ({match,history}) => {\r\n\r\n    const orderId = parseInt(match.params.id)\r\n    //once sdkReady is true, we want to show the paypal button on browser, otherwise the sdk will be in loading status. \r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetail = useSelector(state => state.orderDetail)\r\n    const { order, error: orderDetailError, loading: orderDetailLoading } = orderDetail\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay,error: payError } = orderPay\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDelivered, error: deliverError} = orderDeliver\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //always make sure the user has logged in\r\n    const login = useSelector(state => state.userLogin)\r\n    const {userInfo} = login\r\n\r\n    if (userInfo===null) {\r\n        history.push('/login')\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n    //     const script = document.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.id = 'paypalButtons'\r\n    //     script.src =  \"https://www.paypal.com/sdk/js?client-id=test\"\r\n    //     script.async = true\r\n    //     document.body.appendChild(script)\r\n    //     script.onload = () => {\r\n    //         //the local state SdkReady is like a toggle of showing the third party PayPal button. \r\n    //         setSdkReady(true) \r\n    //     }        \r\n    // }\r\n\r\n    \r\n    //fetch order detail by orderId only when the current state doesn't have orderDetail or doesn't match with the target order    \r\n    // useEffect(() => {\r\n    //     const paypalScript = document.getElementById('paypalButtons')\r\n    //     if (!order || successPay ||successDelivered || orderId !== order._id) {\r\n    //         dispatch(getOrderDetail(orderId))\r\n    //     } else if (!order.isPaid) {\r\n    //         if (!paypalScript) {\r\n    //             addPayPalScript()\r\n    //         } else {\r\n    //             setSdkReady(true)\r\n    //         }\r\n    //     }\r\n    // }, [order,orderId,successPay,successDelivered])\r\n\r\n    useEffect(() => {\r\n        if (!order || successDelivered || orderId !== order._id) {\r\n            dispatch(getOrderDetail(orderId))\r\n        }\r\n    }, [order,orderId,successDelivered])\r\n\r\n    const markDeliveredHandler = () => {\r\n        dispatch(deliverOrder(orderId))\r\n        dispatch({\r\n            type: ORDER_DETAIL_RESET \r\n        })        \r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_RESET\r\n        })\r\n        dispatch({\r\n            type: ORDER_LIST_RESET\r\n        })\r\n    }\r\n\r\n    return orderDetailLoading ? (<Loader />)\r\n           : orderDetailError ? (<ErrorMessage variant=\"danger\">{orderDetailError}</ErrorMessage>)\r\n           : order ? (\r\n            <div className=\"mt-4\">\r\n                <h2 className=\"text-dark\">Thank you for your order!</h2>\r\n                <h3>ORDER NUMBER: {orderId}</h3>\r\n                <Row>\r\n                    <Col className=\"mb-4\" md={8} lg={6}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroupItem>\r\n                                <h2 className=\"mb-2\"><strong>Shipping address</strong></h2>\r\n                                <h5>{`${order.shipping.address}, ${order.shipping.city}, ${order.shipping.province} ${order.shipping.postalCode}`}</h5>\r\n                                {order.isDelivered\r\n                                    ? <ErrorMessage variant=\"success\">{`Your order has been delivered at ${order.deliveredAt}`}</ErrorMessage>\r\n                                    : <ErrorMessage variant='info'>Your order has not been shipped yet</ErrorMessage>\r\n                                }\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <h2 className=\"mb-2\"><strong>Customer contact</strong></h2>\r\n                                <h5>{`Customer name: ${order.user.first_name}`}</h5>\r\n                                <h5>{`Customer email: ${order.user.email}`}</h5>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <h2><strong>Payment method</strong></h2>\r\n                                <h5>{order.paymentMethod}</h5>\r\n                                {order.isPaid\r\n                                    ? <ErrorMessage variant=\"success\">{`Paid at: ${order.paidAt}`}</ErrorMessage>\r\n                                    : <ErrorMessage variant=\"danger\">No payment has been made</ErrorMessage> \r\n                                }\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                                <h2 className=\"mb-2\"><strong>order detail</strong></h2>\r\n                                <ListGroup variant=\"flush\">\r\n                                        {order.orderitems.map(orderItem => (\r\n                                            <ListGroupItem key={orderItem._id}>\r\n                                                <Row>\r\n                                                    <Col md={3} sm={4}>\r\n                                                        <LinkContainer to={`/Product/${orderItem.product}`}>\r\n                                                            <Image src={orderItem.image} alt={orderItem.name} fluid />\r\n                                                        </LinkContainer> \r\n                                                    </Col>\r\n                                                    <Col className=\"placeorder-name\" md={4}>{orderItem.name}</Col>\r\n                                                    <Col md={4}>{orderItem.qty} X ${orderItem.price} = ${(parseFloat(orderItem.price)*orderItem.qty).toFixed(2)}</Col>\r\n                                                </Row>\r\n                                            </ListGroupItem>\r\n                                        ))}\r\n                                </ListGroup>\r\n                            </ListGroupItem>\r\n                        </ListGroup>                    \r\n                    </Col>\r\n\r\n                    <Col className=\"mx-auto\" sm={10} md={10} lg={5}>\r\n                        <Card>                    \r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <h2 className=\"m-auto\"><strong>order summary</strong></h2>          \r\n                                    </Row>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Items:</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n            \r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row> \r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row> \r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col className=\"placeorder-name\">${order.totalPrice}</Col>\r\n                                    </Row> \r\n                                </ListGroupItem>\r\n                                {userInfo.is_staff && !order.isDelivered && (\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button className=\"btn my-2\" variant=\"primary\" type=\"button\" block onClick={markDeliveredHandler}>\r\n                                                    mark as delivered \r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                                )}\r\n\r\n                            </ListGroup>\r\n                        </Card>\r\n                        {deliverError && (<ErrorMessage variant=\"danger\">{deliverError}</ErrorMessage>)}            \r\n\r\n                        {/* If the user is not the one who created the order, Paypal buttons won't show*/}\r\n                        {/* {!order.isPaid && (order.user.id === userInfo.id) && (\r\n                            <div className=\"my-3\">\r\n                                {loadingPay && (\r\n                                    <Loader />\r\n                                )}\r\n                                {payError && (<ErrorMessage variant=\"danger\">{payError}</ErrorMessage>)}\r\n                                {sdkReady ? <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={(details) => {\r\n                                                    dispatch(payOrder(orderId, details.payer.name.given_name))\r\n                                                }}\r\n                                            />\r\n                                        : <Loader /> }\r\n                            </div>\r\n                        )} */}\r\n                        <ListGroupItem>\r\n                            <ErrorMessage variant='warning'>PayPal buttons are disabled for live demo.</ErrorMessage>\r\n                        </ListGroupItem>\r\n\r\n                        <Row>                            \r\n                            <Col><Link to=\"/profile\" className=\"btn btn-dark mx-5 mt-4\">my orders</Link></Col>\r\n                            {userInfo.is_staff && (<Col><Link to=\"/admin/orders\" className=\"btn btn-dark mx-5 mt-4\">all orders</Link></Col>)}\r\n                        </Row>                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            )\r\n            : null\r\n}\r\n\r\nexport default OrderDetailScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button,Alert } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport {Link} from 'react-router-dom'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport { getUserList,deleteUser } from '../actions/userActions'\r\n\r\nconst AdminUserListScreen = ({history}) => {\r\n    const [showDeleteUserWarning,setDeleteUserWarning] = useState([false,null, null])\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const userList = useSelector(state => state.userList)\r\n    const { users, loading, error: userListError } = userList\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success, error: deleteUserError} = userDelete\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else if (userInfo.is_staff) {\r\n            if (!users || success)\r\n            dispatch(getUserList())\r\n        }        \r\n    }, [dispatch,history,userInfo,users,success])\r\n\r\n    const userDeleteHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n        \r\n        setDeleteUserWarning([false,null,null])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-dark mb-4\">Users</h2>\r\n            {loading ? <Loader />\r\n                : userListError \r\n                ? <ErrorMessage variant={'danger'}>{userListError}</ErrorMessage>\r\n                :  <>\r\n                <Alert show={showDeleteUserWarning[0]} variant=\"warning\">\r\n                    <Alert.Heading>Are you sure to remove user {showDeleteUserWarning[1]}</Alert.Heading>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Button className=\"mx-3\" onClick={() => setDeleteUserWarning([false,null,null])} variant=\"outline-success\">\r\n                            No\r\n                        </Button>\r\n                        <Button className=\"mx-3\" onClick={() => userDeleteHandler(showDeleteUserWarning[2])} variant=\"outline-danger\">\r\n                            Yes\r\n                        </Button>\r\n                    </div>\r\n                </Alert> \r\n                {deleteUserError && <ErrorMessage variant={'danger'}>{deleteUserError}</ErrorMessage>}\r\n                <table className=\"table table-hover\">\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Staff</th>\r\n                    <th scope=\"col\">Edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users && users.map(user => (\r\n                        <tr key={user._id}>\r\n                            <th scope=\"row\">{user._id}</th>\r\n                            <td>{user.first_name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.is_staff ? <i className=\"fas fa-user-check text-success\"></i>\r\n                                : <i className=\"fas fa-user\"></i>}\r\n                            </td>\r\n                            <td>\r\n                                <Link to={`/admin/user/${user._id}/edit`} className=\"btn btn-primary btn-sm\"><i className=\"fas fa-edit\"></i></Link>\r\n                                <Button className=\"mx-2\" variant=\"danger\" size=\"sm\" onClick={() => setDeleteUserWarning([true,user.email,user._id]) }><i className=\"fas fa-trash-alt\"></i></Button>                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            </>}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminUserListScreen","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form,Container } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {Link} from 'react-router-dom'\r\nimport {getUserDetailById, updateUserById} from '../actions/userActions'\r\nimport {USER_DETAIL_BY_ID_RESET,USER_LIST_RESET} from '../constants/userConstants'\r\n\r\nconst AdminUserEditScreen = ({history,match}) => {\r\n    const userId = parseInt(match.params.id)\r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [staff,setStaff] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const userDetail = useSelector(state => state.userDetailById)\r\n    const { user,loading, error: userDetailError } = userDetail \r\n    const userUpdateById = useSelector(state => state.userUpdateById)\r\n    const {success:userUpdateSuccess, error: userUpdateError} = userUpdateById\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || user.id !== userId) {\r\n                dispatch(getUserDetailById(userId))\r\n                \r\n            } else if (userUpdateSuccess) {\r\n                history.push('/admin/users')\r\n                dispatch({\r\n                    type: USER_DETAIL_BY_ID_RESET\r\n                })\r\n                dispatch({\r\n                    type: USER_LIST_RESET\r\n                })\r\n            } \r\n            else {\r\n                setName(user.first_name)\r\n                setEmail(user.email)\r\n                setStaff(user.is_staff)\r\n            }\r\n        }\r\n    }, [user,dispatch,history,userId,userInfo,userUpdateSuccess])\r\n    \r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUserById({\r\n            name,\r\n            email,\r\n            username:email,\r\n            is_staff:staff,\r\n        },userId))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <h4>Edit User</h4>       \r\n            {userUpdateError && <ErrorMessage variant={'danger'}>{userUpdateError}</ErrorMessage>}     \r\n            {loading \r\n                ? <Loader />\r\n                : userDetailError\r\n                ? <ErrorMessage variant={'danger'}>{userDetailError}</ErrorMessage>\r\n                : <Form onSubmit={onSubmitHandler}>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"email\">\r\n                    <Form.Label>email</Form.Label>\r\n                    <Form.Control value={email} name='email' onChange={(e) => setEmail(e.target.value)} type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"my-2\" controlId=\"name\">\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control value={name} name='name' onChange={(e) => setName(e.target.value)} type=\"text\"/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mx-2 my-4\" controlId=\"is_staff\">\r\n                    <Form.Check checked={staff} onChange={()=> setStaff(!staff)} type=\"checkbox\" label=\"staff member\" />\r\n                </Form.Group>\r\n\r\n                <Button className=\"my-3 mx-3\" variant=\"primary\" type=\"submit\">\r\n                    Update\r\n                </Button>\r\n                <Link to={`/admin/users`} className=\"btn btn-primary btn-md my-3 mx-5\">cancel & go back</Link>\r\n                </Form>      \r\n                }            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminUserEditScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button,Alert,Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport {Link} from 'react-router-dom'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {fetchProducts, deleteProduct,createProduct} from '../actions/productActions'\r\n\r\nconst AdminProductListScreen = ({history}) => {\r\n    const [showDeleteProductWarning,setDeleteProductWarning] = useState([false,null, null])\r\n    const [showCreateForm,setShowCreateForm] = useState(false)\r\n    //state for create form\r\n    const [name,setName] = useState('')\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [imageFile,setImageFile] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {products,loading: productListLoading,error: productListError} = productList\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {success: deleteProductSuccess, error: deleteProductLoading} = productDelete\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {success: createProductSuccess, loading: createProductLoading, error: createProductError} = productCreate\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else if (userInfo.is_staff) {\r\n            if (!products || deleteProductSuccess || createProductSuccess)\r\n            dispatch(fetchProducts())\r\n        }        \r\n    }, [dispatch,history,userInfo,products,createProductSuccess,deleteProductSuccess])\r\n\r\n    const productDeleteHandler = (id) => {\r\n        dispatch(deleteProduct(id))        \r\n        setDeleteProductWarning([false,null,null])\r\n    }\r\n    const createProductHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.append('user',userInfo.email)\r\n        formData.append('name',name)\r\n        formData.append('brand',brand)\r\n        formData.append('category',category)\r\n        formData.append('description',description)\r\n        formData.append('price',price)\r\n        formData.append('countInStock',countInStock)\r\n        formData.append('image',imageFile)\r\n        formData.append('rating',0)\r\n\r\n        dispatch(createProduct(formData))\r\n        setShowCreateForm(false)\r\n    }\r\n    const clearFormHandler = () => {\r\n        setName('')\r\n        setBrand('')\r\n        setCategory('')\r\n        setDescription('')\r\n        setPrice(0)\r\n        setCountInStock(0)\r\n        setImageFile(null)\r\n    }\r\n\r\n    const onImageChange =(e) => {\r\n        setImageFile(e.target.files[0])\r\n    }\r\n    return (\r\n            !showCreateForm ? (\r\n                <div>\r\n                <h2 className=\"text-dark mb-4\">Products</h2>\r\n                {productListLoading ? <Loader />\r\n                    : productListError \r\n                    ? <ErrorMessage variant={'danger'}>{productListError}</ErrorMessage>\r\n                    :  <div>\r\n                        <Alert show={showDeleteProductWarning[0]} variant=\"warning\">\r\n                            <Alert.Heading>Are you sure to remove product {showDeleteProductWarning[1]}</Alert.Heading>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button className=\"mx-3\" onClick={() => setDeleteProductWarning([false,null,null])} variant=\"outline-success\">\r\n                                    No\r\n                                </Button>\r\n                                <Button className=\"mx-3\" onClick={() => productDeleteHandler(showDeleteProductWarning[2])} variant=\"outline-danger\">\r\n                                    Yes\r\n                                </Button>\r\n                            </div>\r\n                        </Alert> \r\n                        <Button variant=\"primary\" size=\"md\" className=\"float-right mb-3\" onClick={() => setShowCreateForm(true)}><i className=\"fas fa-plus\"></i> add new product</Button>\r\n                        {deleteProductLoading && <ErrorMessage variant={'danger'}>{deleteProductLoading}</ErrorMessage>}\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Category</th>\r\n                                    <th scope=\"col\">Brand</th>\r\n                                    <th scope=\"col\">Price</th>\r\n                                    <th scope=\"col\">In Stock</th>\r\n                                    <th scope=\"col\">Edit</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products && products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <th scope=\"row\">{product._id}</th>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td>\r\n                                            <Link to={`/admin/product/${product._id}/edit`} className=\"btn btn-primary btn-sm\"><i className=\"fas fa-edit\"></i></Link>\r\n                                            <Button className=\"mx-2\" variant=\"danger\" size=\"sm\" onClick={() => setDeleteProductWarning([true,product.name,product._id]) }><i className=\"fas fa-trash-alt\"></i></Button>                                \r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>      \r\n                }\r\n                </div>                     \r\n            )\r\n            \r\n            : (\r\n                <div>\r\n                    <h2 className=\"text-dark mb-4\">Create Product</h2>\r\n                    {createProductLoading && <Loader />}\r\n                    {createProductError && <ErrorMessage variant={'danger'}>{createProductError}</ErrorMessage>}\r\n                    <Form onSubmit={(e) => createProductHandler(e)}>\r\n                        <Form.Group className=\"my-2\" controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control value={name} name='name' onChange={(e) => setName(e.target.value)} type=\"text\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-2\" controlId=\"brand\">\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control value={brand} name='brand' onChange={(e) => setBrand(e.target.value)} type=\"text\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-2\" controlId=\"category\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control value={category} name='category' onChange={(e) => setCategory(e.target.value)} type=\"text\" required/>\r\n                        </Form.Group>\r\n                        {/* <Form.Group className=\"my-2\">\r\n                            <Form.Label>Please upload product image</Form.Label>\r\n                            <Form.File id=\"image\" onChange={onImageChange} required/>\r\n                        </Form.Group> */}\r\n                        <Form.Group className=\"my-2\" controlId=\"description\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control value={description} name='description' onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} required/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-2\" controlId=\"price\">\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control value={price} name='price' onChange={(e) => setPrice(e.target.value)} type=\"number\" min=\"0\" step=\"0.01\" data-number-to-fixed=\"2\" data-number-stepfactor=\"100\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-2\" controlId=\"countInStock\">\r\n                            <Form.Label>Number In Stock</Form.Label>\r\n                            <Form.Control value={countInStock} name='countInStock' onChange={(e) => setCountInStock(e.target.value)}  min=\"0\" type=\"number\" required/>\r\n                        </Form.Group>\r\n                        <Button className=\"my-4 mx-3\" variant=\"primary\" type=\"submit\">\r\n                            Create\r\n                        </Button>\r\n                        <Button className=\"my-4 mx-3\" variant=\"primary\" onClick={() => setShowCreateForm(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button className=\"my-4 mx-3\" variant=\"primary\" onClick={clearFormHandler}>\r\n                            Clear Form\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            )\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminProductListScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Button, Form,Container } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {Link} from 'react-router-dom'\r\nimport {fetchProduct,updateProductById} from '../actions/productActions'\r\nimport {PRODUCT_DETAILS_RESET,PRODUCT_LIST_RESET} from '../constants/productConstants'\r\n\r\nconst AdminProductEditScreen = ({match,history}) => {\r\n    const productId = parseInt(match.params.id)\r\n\r\n    const [name,setName] = useState('')\r\n    const [brand,setBrand] = useState('')\r\n    const [category,setCategory] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [price,setPrice] = useState(0)\r\n    const [countInStock,setCountInStock] = useState(0)\r\n    const [imageFile,setImageFile] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDetail = useSelector(state => state.productDetails)\r\n    const { product,loading, error: productDetailError } = productDetail\r\n    const productUpdateById = useSelector(state => state.productUpdateById)\r\n    const {success: productUpdateSuccess, error: productUpdateError} = productUpdateById\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!product || product._id !== productId) {\r\n                dispatch(fetchProduct(productId))\r\n            } else if (productUpdateSuccess) {\r\n                history.push('/admin/products')\r\n                dispatch({\r\n                    type: PRODUCT_DETAILS_RESET\r\n                })\r\n                //in order for list screen re-dispatch and get the updated list info.\r\n                dispatch({\r\n                    type: PRODUCT_LIST_RESET\r\n                })\r\n            } \r\n            else {\r\n                setName(product.name)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setDescription(product.description)\r\n                setPrice(product.price)\r\n                setImageFile(product.image)\r\n                setCountInStock(product.countInStock)\r\n            }\r\n        }\r\n    }, [product,productId,dispatch,history,userInfo,productUpdateSuccess])\r\n\r\n    const onImageChange =(e) => {\r\n        setImageFile(e.target.files[0])\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('user',userInfo.email)\r\n        formData.append('name',name)\r\n        formData.append('brand',brand)\r\n        formData.append('category',category)\r\n        formData.append('description',description)\r\n        formData.append('price',price)\r\n        formData.append('countInStock',countInStock)\r\n        if (imageFile !== null) {\r\n            formData.append('image',imageFile)\r\n        }       \r\n\r\n        dispatch(updateProductById(formData,productId))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n        <h4>Edit Product</h4>          \r\n        {productUpdateError && <ErrorMessage variant={'danger'}>{productUpdateError}</ErrorMessage>}\r\n        {loading \r\n            ? <Loader />\r\n            : productDetailError\r\n            ? <ErrorMessage variant={'danger'}>{productDetailError}</ErrorMessage>\r\n            : product ?                 \r\n                <Form onSubmit={onSubmitHandler}>\r\n                    <Form.Group className=\"my-2\" controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control value={name} name='name' onChange={(e) => setName(e.target.value)} type=\"text\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" controlId=\"brand\">\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control value={brand} name='brand' onChange={(e) => setBrand(e.target.value)} type=\"text\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" controlId=\"category\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control value={category} name='category' onChange={(e) => setCategory(e.target.value)} type=\"text\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" className=\"my-4\">\r\n                        <Form.Label>{`Currently: ${product.image}`}</Form.Label>\r\n                        <Form.File id=\"image\" onChange={onImageChange} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" controlId=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control value={description} name='description' onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" controlId=\"price\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control value={price} name='price' onChange={(e) => setPrice(e.target.value)} type=\"number\" min=\"0\" step=\"0.01\" data-number-to-fixed=\"2\" data-number-stepfactor=\"100\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"my-2\" controlId=\"countInStock\">\r\n                        <Form.Label>Number In Stock</Form.Label>\r\n                        <Form.Control value={countInStock} name='countInStock' onChange={(e) => setCountInStock(e.target.value)}  min=\"0\" type=\"number\" />\r\n                    </Form.Group>\r\n                    <Button className=\"my-3 mx-5\" variant=\"primary\" type=\"submit\">\r\n                        Update\r\n                    </Button>\r\n                    <Link to={`/admin/products`} className=\"btn btn-primary btn-md my-3 mx-5\">cancel & go back</Link>\r\n                </Form>   \r\n            : null   \r\n        }            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminProductEditScreen\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport {Link} from 'react-router-dom'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\nimport {getOrderListAdmin} from '../actions/orderActions'\r\n\r\n\r\nconst AdminOrderListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const orderListAdmin = useSelector(state => state.orderListAdmin)\r\n    const { orders, loading, error } = orderListAdmin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.token) {\r\n            history.push('/login')\r\n        } else if (userInfo.is_staff) {\r\n            if (!orders)\r\n            dispatch(getOrderListAdmin())\r\n        }        \r\n    }, [dispatch,history,userInfo,orders])\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-dark mb-4\">Orders</h2>\r\n            {loading ? <Loader />\r\n                : error \r\n                ? <ErrorMessage variant={'danger'}>{error}</ErrorMessage>\r\n                :  \r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"table-dark\">\r\n                        <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Create Date</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Is Paid</th>\r\n                        <th scope=\"col\">Is Shipped</th>\r\n                        <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <th scope=\"row\">{order._id}</th>\r\n                                <td>{order.date}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <span className=\"text-success\">{order.paidAt.substring(0,10)}</span>\r\n                                    : <i className=\"fas fa-exclamation-circle text-danger\"></i>}\r\n                                </td>\r\n                                <td>{order.isDelivered ? <span className=\"text-success\">{order.deliveredAt.substring(0,10)}</span>\r\n                                    : <i className=\"fas fa-exclamation-circle text-danger\"></i>}\r\n                                </td>\r\n                                <td>\r\n                                    <Link to={`/order/${order._id}`}><i className=\"fas fa-angle-double-right\"></i> Order Detail</Link>                         \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminOrderListScreen\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport {HashRouter as Router , Route} from 'react-router-dom'\r\nimport OrderDetailScreen from './screens/OrderDetailScreen'\r\nimport AdminUserListScreen from './screens/AdminUserListScreen'\r\nimport AdminUserEditScreen from './screens/AdminUserEditScreen'\r\nimport AdminProductListScreen from './screens/AdminProductListScreen'\r\nimport AdminProductEditScreen from './screens/AdminProductEditScreen'\r\nimport AdminOrderListScreen from './screens/AdminOrderListScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart\" component={CartScreen} />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderDetailScreen} />\r\n          <Route path=\"/admin/users\" component={AdminUserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={AdminUserEditScreen} />\r\n          <Route path=\"/admin/products\" component={AdminProductListScreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component={AdminProductEditScreen} />\r\n          <Route path=\"/admin/orders\" component={AdminOrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer/>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    SAVE_SHIPPING_ADDRESS,\r\n    SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR,\r\n} from '../constants/cartConstants'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingDetail') ?\r\n    JSON.parse(localStorage.getItem('shippingDetail')) : {} \r\n\r\nexport const cartReducer = (state={ },action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const found = state.cart.find(item => item._id === action.payload._id) \r\n            if (found) {\r\n                return {\r\n                    ...state,\r\n                    cart: state.cart.map(itm => {\r\n                        if (itm._id === found._id) {\r\n                            //the action.payload.qty has been updated in component\r\n                            return action.payload\r\n                        } else {\r\n                            return itm\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cart: [\r\n                        ...state.cart,\r\n                        action.payload\r\n                    ]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(item => item._id !== action.payload._id)\r\n            }\r\n\r\n        case SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shipping: action.payload,\r\n                //action payload is an object contains shipping address\r\n            }    \r\n\r\n        case SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }    \r\n            \r\n        case CART_CLEAR:\r\n            return {                \r\n                cart: [],\r\n                shipping: shippingAddressFromStorage,\r\n            }    \r\n\r\n        default:\r\n            return state    \r\n    }\r\n\r\n}","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateByIdReducer,\r\n    productReviewCreateReducer,\r\n} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer, \r\n    userProfileReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer, \r\n    userDetailByIdReducer,\r\n    userUpdateByIdReducer, \r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailReducer, \r\n    orderPayReducer, \r\n    orderListReducer, \r\n    orderListAdminReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst rootReducer = combineReducers({  \r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdateById: productUpdateByIdReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n\r\n    cart:cartReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userProfile: userProfileReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userDetailById: userDetailByIdReducer,\r\n    userUpdateById: userUpdateByIdReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetail: orderDetailReducer,\r\n    orderPay: orderPayReducer,\r\n    orderList: orderListReducer,\r\n    orderListAdmin: orderListAdminReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cart') ?\r\n    JSON.parse(localStorage.getItem('cart')) : []    \r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingDetail') ?\r\n    JSON.parse(localStorage.getItem('shippingDetail')) : {}  \r\n\r\nconst initialState = {\r\n    cart: {\r\n        cart: cartItemsFromStorage,\r\n        shipping: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk))\r\n\r\nconst store = createStore(rootReducer, initialState,composedEnhancer)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_RESET,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_RESET,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_BY_ID_REQUEST,\r\n    PRODUCT_UPDATE_BY_ID_SUCCESS,\r\n    PRODUCT_UPDATE_BY_ID_FAIL,\r\n    PRODUCT_UPDATE_BY_ID_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {},action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                products: action.payload,                \r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case PRODUCT_LIST_RESET:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {},action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                product:action.payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload,\r\n            }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\n//ADMIN\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PRODUCT_DELETE_RESET:\r\n            return {\r\n\r\n            }    \r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }    \r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const productUpdateByIdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_BY_ID_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case PRODUCT_UPDATE_BY_ID_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case PRODUCT_UPDATE_BY_ID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PRODUCT_UPDATE_BY_ID_RESET:\r\n            return {}\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_PROFILE_REQUEST,\r\n    USER_PROFILE_SUCCESS,\r\n    USER_PROFILE_FAIL,\r\n    USER_PROFILE_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_RESET,\r\n\r\n    USER_DETAIL_BY_ID_REQUEST,\r\n    USER_DETAIL_BY_ID_SUCCESS,\r\n    USER_DETAIL_BY_ID_FAIL,\r\n    USER_DETAIL_BY_ID_RESET,\r\n    USER_UPDATE_BY_ID_REQUEST,\r\n    USER_UPDATE_BY_ID_SUCCESS,\r\n    USER_UPDATE_BY_ID_FAIL,\r\n    USER_UPDATE_BY_ID_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_LOGOUT:\r\n            return {\r\n                userInfo: null,\r\n            }\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_LOGOUT:\r\n            return {\r\n                \r\n            }\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const userProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_PROFILE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_PROFILE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                user: action.payload\r\n            }\r\n        case USER_PROFILE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_PROFILE_RESET:\r\n            return {\r\n\r\n            }    \r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                userInfo: action.payload,\r\n                success: true,\r\n            }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\n//ADMIN\r\nexport const userListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                users: action.payload\r\n            }\r\n        case USER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_LIST_RESET:\r\n            return {\r\n            } \r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_DELETE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case USER_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_DELETE_RESET:\r\n            return {\r\n\r\n            }    \r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const userDetailByIdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAIL_BY_ID_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_DETAIL_BY_ID_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                user: action.payload\r\n            }\r\n        case USER_DETAIL_BY_ID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_DETAIL_BY_ID_RESET:\r\n            return {\r\n\r\n            }    \r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const userUpdateByIdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_BY_ID_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case USER_UPDATE_BY_ID_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case USER_UPDATE_BY_ID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_UPDATE_BY_ID_RESET:\r\n            return {}\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAIL_REQUEST,\r\n    ORDER_DETAIL_SUCCESS,\r\n    ORDER_DETAIL_FAIL,\r\n    ORDER_DETAIL_RESET,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_RESET,\r\n    ORDER_LIST_ADMIN_REQUEST,\r\n    ORDER_LIST_ADMIN_SUCCESS,\r\n    ORDER_LIST_ADMIN_FAIL,\r\n    ORDER_LIST_ADMIN_RESET,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                order: action.payload,\r\n                success: true,\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return { }    \r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nexport const orderDetailReducer = (state = {loading: true}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true,                   \r\n            }\r\n        case ORDER_DETAIL_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAIL_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DETAIL_RESET:\r\n            return {}    \r\n        default :\r\n            return state    \r\n        }\r\n}\r\n\r\nexport const orderPayReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {\r\n\r\n            }        \r\n        default :\r\n            return state    \r\n        }\r\n}\r\n\r\nexport const orderListReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                orders: [],\r\n                loading:true,                   \r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_RESET:\r\n            return { }     \r\n        default :\r\n            return state    \r\n        }\r\n}\r\n\r\n//Admin\r\nexport const orderListAdminReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_ADMIN_REQUEST:\r\n            return {\r\n                orders: [],\r\n                loading:true,                   \r\n            }\r\n        case ORDER_LIST_ADMIN_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_ADMIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_ADMIN_RESET:\r\n            return { }     \r\n        default :\r\n            return state    \r\n        }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading:true,                   \r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {\r\n\r\n            }        \r\n        default :\r\n            return state    \r\n        }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import './bootstrap.min.css' //import the bootstrap theme\r\nimport App from './App';\r\n\r\nimport store from './store'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}